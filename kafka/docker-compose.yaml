version: '3'
services:

  zookeeper:
    image: bitnami/zookeeper:latest
    networks:
      - brokers-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    restart: always

  kafka1:
    image: bitnami/kafka:latest
    networks:
      - brokers-net
    depends_on:
      - zookeeper
    ports:
      - 9091:9091
    # volumes:
    #   - 'kafka1_data:/bitnami'
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka1:19091,OUTSIDE://localhost:9091
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CFG_LISTENERS: INSIDE://:19091,OUTSIDE://:9091
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CFG_LOG_RETENTION_HOURS: 12
    restart: always

  kafka2:
    image: bitnami/kafka:latest
    networks:
      - brokers-net
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    # volumes:
    #   - 'kafka2_data:/bitnami'
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka2:19092,OUTSIDE://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CFG_LISTENERS: INSIDE://:19092,OUTSIDE://:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_BROKER_ID: 2
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_CFG_LOG_RETENTION_HOURS: 12
    restart: always

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - brokers-net
    depends_on:
      - kafka1
      - kafka2
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka1:19091,kafka2:19092

  stats:
    image: bitnami/rabbitmq
    environment:
      - RABBITMQ_NODE_TYPE=stats
      - RABBITMQ_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
      - RABBITMQ_USERNAME=root
      - RABBITMQ_PASSWORD=password
    ports:
      - '15672:15672'
      - '5672:5672'
    volumes:
      - 'rabbitmqstats_data:/bitnami'
    restart: always
    networks:
      - brokers-net

  queue-disc1:
    image: bitnami/rabbitmq
    environment:
      - RABBITMQ_NODE_TYPE=queue-disc
      - RABBITMQ_NODE_NAME=rabbit@queue-disc1
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    volumes:
      - 'rabbitmqdisc1_data:/bitnami'
    depends_on:
      - stats
    networks:
      - brokers-net

    restart: always
  queue-ram1:
    image: bitnami/rabbitmq
    environment:
      - RABBITMQ_NODE_TYPE=queue-ram
      - RABBITMQ_NODE_NAME=rabbit@queue-ram1
      - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
      - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    volumes:
      - 'rabbitmqram1_data:/bitnami'
    depends_on:
      - stats
    restart: always
    networks:
      - brokers-net

volumes:
  rabbitmqstats_data:
    driver: local
  rabbitmqdisc1_data:
    driver: local
  rabbitmqram1_data:
    driver: local
  # kafka1_data:
  #   driver: local
  # kafka2_data:
  #   driver: local

networks:
  brokers-net:
    driver: bridge
